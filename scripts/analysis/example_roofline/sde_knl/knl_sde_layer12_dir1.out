sde64 -knl -d -iform 1 -omix sde_knl/knl_sde_layer12_dir1.out.mix -global_region -start_ssc_mark 111:repeat -stop_ssc_mark 222:repeat -- /project/projectdirs/mpccc/tmalas/intelcaffe/install_carl/bin/caffe time -model=src/models/mkl2017_alexnet/train_val.prototxt -iterations=1 -prof_layer=12 -prof_forward_direction=1
I1109 00:01:25.873898 136895 caffe.cpp:444] Use CPU.
I1109 00:01:42.759281 136895 cpu_info.cpp:452] Processor speed [MHz]: 1400
I1109 00:01:42.815124 136895 cpu_info.cpp:455] Total number of sockets: 1
I1109 00:01:42.828228 136895 cpu_info.cpp:458] Total number of CPU cores: 68
I1109 00:01:42.840554 136895 cpu_info.cpp:461] Total number of processors: 272
I1109 00:01:42.851666 136895 cpu_info.cpp:464] GPU is used: no
I1109 00:01:42.860599 136895 cpu_info.cpp:467] OpenMP environmental variables are specified: yes
I1109 00:01:42.869402 136895 cpu_info.cpp:470] OpenMP thread bind allowed: no
I1109 00:01:42.880190 136895 cpu_info.cpp:473] Number of OpenMP threads: 16
I1109 00:01:51.624235 136895 net.cpp:484] The NetState phase (0) differed from the phase (1) specified by a rule in layer data
I1109 00:01:51.657011 136895 net.cpp:484] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I1109 00:01:52.286317 136895 net.cpp:120] Initializing net from parameters: 
name: "AlexNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "data"
  type: "DummyData"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  dummy_data_param {
    data_filler {
      type: "gaussian"
      std: 1
    }
    data_filler {
      type: "constant"
      value: 0
    }
    shape {
      dim: 32
      dim: 3
      dim: 227
      dim: 227
    }
    shape {
      dim: 32
      dim: 1
      dim: 1
      dim: 1
    }
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    kernel_size: 11
    stride: 4
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    engine: MKL2017
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
  relu_param {
    engine: MKL2017
  }
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "conv1"
  top: "norm1"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
    engine: MKL2017
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "norm1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    engine: MKL2017
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
    engine: MKL2017
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
  relu_param {
    engine: MKL2017
  }
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "conv2"
  top: "norm2"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
    engine: MKL2017
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "norm2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    engine: MKL2017
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    engine: MKL2017
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
  relu_param {
    engine: MKL2017
  }
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
    engine: MKL2017
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
  relu_param {
    engine: MKL2017
  }
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
    engine: MKL2017
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
  relu_param {
    engine: MKL2017
  }
}
layer {
  name: "pool5"
  type: "Pooling"
  bottom: "conv5"
  top: "pool5"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    engine: MKL2017
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "drop7"
  type: "Dropout"
  bottom: "fc7"
  top: "fc7"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc8"
  type: "InnerProduct"
  bottom: "fc7"
  top: "fc8"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 1000
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "fc8"
  bottom: "label"
  top: "loss"
}
I1109 00:01:54.729241 136895 layer_factory.hpp:114] Creating layer data
I1109 00:01:54.875516 136895 net.cpp:160] Creating Layer data
I1109 00:01:54.923535 136895 net.cpp:570] data -> data
I1109 00:01:55.392498 136895 net.cpp:570] data -> label
I1109 00:02:02.408234 136895 net.cpp:210] Setting up data
I1109 00:02:02.487479 136895 net.cpp:217] Top shape: 32 3 227 227 (4946784)
I1109 00:02:02.590634 136895 net.cpp:217] Top shape: 32 1 1 1 (32)
I1109 00:02:02.597940 136895 net.cpp:225] Memory required for data: 19787264
I1109 00:02:02.665189 136895 layer_factory.hpp:114] Creating layer conv1
I1109 00:02:02.988523 136895 net.cpp:160] Creating Layer conv1
I1109 00:02:03.042487 136895 net.cpp:596] conv1 <- data
I1109 00:02:03.162470 136895 net.cpp:570] conv1 -> conv1
I1109 00:02:35.782451 136895 net.cpp:210] Setting up conv1
I1109 00:02:35.789602 136895 net.cpp:217] Top shape: 32 96 55 55 (9292800)
I1109 00:02:35.789963 136895 net.cpp:225] Memory required for data: 56958464
I1109 00:02:36.066481 136895 layer_factory.hpp:114] Creating layer relu1
I1109 00:02:36.186270 136895 net.cpp:160] Creating Layer relu1
I1109 00:02:36.190907 136895 net.cpp:596] relu1 <- conv1
I1109 00:02:36.222731 136895 net.cpp:557] relu1 -> conv1 (in-place)
I1109 00:02:36.410918 136895 net.cpp:210] Setting up relu1
I1109 00:02:36.413408 136895 net.cpp:217] Top shape: 32 96 55 55 (9292800)
I1109 00:02:36.413789 136895 net.cpp:225] Memory required for data: 94129664
I1109 00:02:36.414013 136895 layer_factory.hpp:114] Creating layer norm1
I1109 00:02:36.518070 136895 net.cpp:160] Creating Layer norm1
I1109 00:02:36.518385 136895 net.cpp:596] norm1 <- conv1
I1109 00:02:36.520969 136895 net.cpp:570] norm1 -> norm1
I1109 00:02:36.748086 136895 net.cpp:210] Setting up norm1
I1109 00:02:36.761015 136895 net.cpp:217] Top shape: 32 96 55 55 (9292800)
I1109 00:02:36.761397 136895 net.cpp:225] Memory required for data: 131300864
I1109 00:02:36.761708 136895 layer_factory.hpp:114] Creating layer pool1
I1109 00:02:36.854616 136895 net.cpp:160] Creating Layer pool1
I1109 00:02:36.854933 136895 net.cpp:596] pool1 <- norm1
I1109 00:02:36.869698 136895 net.cpp:570] pool1 -> pool1
I1109 00:02:37.168161 136895 net.cpp:210] Setting up pool1
I1109 00:02:37.170675 136895 net.cpp:217] Top shape: 32 96 27 27 (2239488)
I1109 00:02:37.170999 136895 net.cpp:225] Memory required for data: 140258816
I1109 00:02:37.171248 136895 layer_factory.hpp:114] Creating layer conv2
I1109 00:02:37.171617 136895 net.cpp:160] Creating Layer conv2
I1109 00:02:37.171870 136895 net.cpp:596] conv2 <- pool1
I1109 00:02:37.172103 136895 net.cpp:570] conv2 -> conv2
I1109 00:02:42.900722 136895 net.cpp:210] Setting up conv2
I1109 00:02:42.901093 136895 net.cpp:217] Top shape: 32 256 27 27 (5971968)
I1109 00:02:42.901474 136895 net.cpp:225] Memory required for data: 164146688
I1109 00:02:42.951887 136895 layer_factory.hpp:114] Creating layer relu2
I1109 00:02:42.952276 136895 net.cpp:160] Creating Layer relu2
I1109 00:02:42.952611 136895 net.cpp:596] relu2 <- conv2
I1109 00:02:42.952947 136895 net.cpp:557] relu2 -> conv2 (in-place)
I1109 00:02:42.953397 136895 net.cpp:210] Setting up relu2
I1109 00:02:42.953657 136895 net.cpp:217] Top shape: 32 256 27 27 (5971968)
I1109 00:02:42.953888 136895 net.cpp:225] Memory required for data: 188034560
I1109 00:02:42.954077 136895 layer_factory.hpp:114] Creating layer norm2
I1109 00:02:42.954320 136895 net.cpp:160] Creating Layer norm2
I1109 00:02:42.954519 136895 net.cpp:596] norm2 <- conv2
I1109 00:02:42.954782 136895 net.cpp:570] norm2 -> norm2
I1109 00:02:42.956920 136895 net.cpp:210] Setting up norm2
I1109 00:02:42.957237 136895 net.cpp:217] Top shape: 32 256 27 27 (5971968)
I1109 00:02:42.957479 136895 net.cpp:225] Memory required for data: 211922432
I1109 00:02:42.957708 136895 layer_factory.hpp:114] Creating layer pool2
I1109 00:02:42.958679 136895 net.cpp:160] Creating Layer pool2
I1109 00:02:42.959002 136895 net.cpp:596] pool2 <- norm2
I1109 00:02:42.959285 136895 net.cpp:570] pool2 -> pool2
I1109 00:02:42.959692 136895 net.cpp:210] Setting up pool2
I1109 00:02:42.959940 136895 net.cpp:217] Top shape: 32 256 13 13 (1384448)
I1109 00:02:42.960165 136895 net.cpp:225] Memory required for data: 217460224
I1109 00:02:42.960362 136895 layer_factory.hpp:114] Creating layer conv3
I1109 00:02:42.960747 136895 net.cpp:160] Creating Layer conv3
I1109 00:02:42.961097 136895 net.cpp:596] conv3 <- pool2
I1109 00:02:42.961400 136895 net.cpp:570] conv3 -> conv3
I1109 00:02:43.413372 136895 net.cpp:210] Setting up conv3
I1109 00:02:43.415794 136895 net.cpp:217] Top shape: 32 384 13 13 (2076672)
I1109 00:02:43.416146 136895 net.cpp:225] Memory required for data: 225766912
I1109 00:02:43.419682 136895 layer_factory.hpp:114] Creating layer relu3
I1109 00:02:43.420162 136895 net.cpp:160] Creating Layer relu3
I1109 00:02:43.420490 136895 net.cpp:596] relu3 <- conv3
I1109 00:02:43.420860 136895 net.cpp:557] relu3 -> conv3 (in-place)
I1109 00:02:43.425292 136895 net.cpp:210] Setting up relu3
I1109 00:02:43.425637 136895 net.cpp:217] Top shape: 32 384 13 13 (2076672)
I1109 00:02:43.425935 136895 net.cpp:225] Memory required for data: 234073600
I1109 00:02:43.426167 136895 layer_factory.hpp:114] Creating layer conv4
I1109 00:02:43.426573 136895 net.cpp:160] Creating Layer conv4
I1109 00:02:43.426883 136895 net.cpp:596] conv4 <- conv3
I1109 00:02:43.427153 136895 net.cpp:570] conv4 -> conv4
I1109 00:02:43.695583 136895 net.cpp:210] Setting up conv4
I1109 00:02:43.695973 136895 net.cpp:217] Top shape: 32 384 13 13 (2076672)
I1109 00:02:43.696398 136895 net.cpp:225] Memory required for data: 242380288
I1109 00:02:43.696730 136895 layer_factory.hpp:114] Creating layer relu4
I1109 00:02:43.697088 136895 net.cpp:160] Creating Layer relu4
I1109 00:02:43.697329 136895 net.cpp:596] relu4 <- conv4
I1109 00:02:43.697582 136895 net.cpp:557] relu4 -> conv4 (in-place)
I1109 00:02:43.709882 136895 net.cpp:210] Setting up relu4
I1109 00:02:43.710232 136895 net.cpp:217] Top shape: 32 384 13 13 (2076672)
I1109 00:02:43.710609 136895 net.cpp:225] Memory required for data: 250686976
I1109 00:02:43.710959 136895 layer_factory.hpp:114] Creating layer conv5
I1109 00:02:43.711349 136895 net.cpp:160] Creating Layer conv5
I1109 00:02:43.711606 136895 net.cpp:596] conv5 <- conv4
I1109 00:02:43.711872 136895 net.cpp:570] conv5 -> conv5
I1109 00:02:43.881796 136895 net.cpp:210] Setting up conv5
I1109 00:02:43.882195 136895 net.cpp:217] Top shape: 32 256 13 13 (1384448)
I1109 00:02:43.882644 136895 net.cpp:225] Memory required for data: 256224768
I1109 00:02:43.887377 136895 layer_factory.hpp:114] Creating layer relu5
I1109 00:02:43.887830 136895 net.cpp:160] Creating Layer relu5
I1109 00:02:43.888120 136895 net.cpp:596] relu5 <- conv5
I1109 00:02:43.888450 136895 net.cpp:557] relu5 -> conv5 (in-place)
I1109 00:02:43.889545 136895 net.cpp:210] Setting up relu5
I1109 00:02:43.889922 136895 net.cpp:217] Top shape: 32 256 13 13 (1384448)
I1109 00:02:43.890197 136895 net.cpp:225] Memory required for data: 261762560
I1109 00:02:43.890425 136895 layer_factory.hpp:114] Creating layer pool5
I1109 00:02:43.890748 136895 net.cpp:160] Creating Layer pool5
I1109 00:02:43.890995 136895 net.cpp:596] pool5 <- conv5
I1109 00:02:43.891335 136895 net.cpp:570] pool5 -> pool5
I1109 00:02:43.891757 136895 net.cpp:210] Setting up pool5
I1109 00:02:43.892026 136895 net.cpp:217] Top shape: 32 256 6 6 (294912)
I1109 00:02:43.892262 136895 net.cpp:225] Memory required for data: 262942208
I1109 00:02:43.892453 136895 layer_factory.hpp:114] Creating layer fc6
I1109 00:02:43.947399 136895 net.cpp:160] Creating Layer fc6
I1109 00:02:43.947708 136895 net.cpp:596] fc6 <- pool5
I1109 00:02:43.948083 136895 net.cpp:570] fc6 -> fc6
I1109 00:02:48.033962 136895 net.cpp:210] Setting up fc6
I1109 00:02:48.034268 136895 net.cpp:217] Top shape: 32 4096 (131072)
I1109 00:02:48.036392 136895 net.cpp:225] Memory required for data: 263466496
I1109 00:02:48.036708 136895 layer_factory.hpp:114] Creating layer relu6
I1109 00:02:48.039242 136895 net.cpp:160] Creating Layer relu6
I1109 00:02:48.039541 136895 net.cpp:596] relu6 <- fc6
I1109 00:02:48.039777 136895 net.cpp:557] relu6 -> fc6 (in-place)
I1109 00:02:48.040205 136895 net.cpp:210] Setting up relu6
I1109 00:02:48.040458 136895 net.cpp:217] Top shape: 32 4096 (131072)
I1109 00:02:48.040693 136895 net.cpp:225] Memory required for data: 263990784
I1109 00:02:48.040937 136895 layer_factory.hpp:114] Creating layer drop6
I1109 00:02:48.060927 136895 net.cpp:160] Creating Layer drop6
I1109 00:02:48.061238 136895 net.cpp:596] drop6 <- fc6
I1109 00:02:48.061673 136895 net.cpp:557] drop6 -> fc6 (in-place)
I1109 00:02:48.165031 136895 net.cpp:210] Setting up drop6
I1109 00:02:48.165328 136895 net.cpp:217] Top shape: 32 4096 (131072)
I1109 00:02:48.165693 136895 net.cpp:225] Memory required for data: 264515072
I1109 00:02:48.165911 136895 layer_factory.hpp:114] Creating layer fc7
I1109 00:02:48.166194 136895 net.cpp:160] Creating Layer fc7
I1109 00:02:48.166412 136895 net.cpp:596] fc7 <- fc6
I1109 00:02:48.166800 136895 net.cpp:570] fc7 -> fc7
I1109 00:02:49.877483 136895 net.cpp:210] Setting up fc7
I1109 00:02:49.877820 136895 net.cpp:217] Top shape: 32 4096 (131072)
I1109 00:02:49.878213 136895 net.cpp:225] Memory required for data: 265039360
I1109 00:02:49.878525 136895 layer_factory.hpp:114] Creating layer relu7
I1109 00:02:49.878829 136895 net.cpp:160] Creating Layer relu7
I1109 00:02:49.879055 136895 net.cpp:596] relu7 <- fc7
I1109 00:02:49.879286 136895 net.cpp:557] relu7 -> fc7 (in-place)
I1109 00:02:49.879721 136895 net.cpp:210] Setting up relu7
I1109 00:02:49.879983 136895 net.cpp:217] Top shape: 32 4096 (131072)
I1109 00:02:49.880216 136895 net.cpp:225] Memory required for data: 265563648
I1109 00:02:49.880403 136895 layer_factory.hpp:114] Creating layer drop7
I1109 00:02:49.880661 136895 net.cpp:160] Creating Layer drop7
I1109 00:02:49.880919 136895 net.cpp:596] drop7 <- fc7
I1109 00:02:49.881181 136895 net.cpp:557] drop7 -> fc7 (in-place)
I1109 00:02:49.881515 136895 net.cpp:210] Setting up drop7
I1109 00:02:49.881723 136895 net.cpp:217] Top shape: 32 4096 (131072)
I1109 00:02:49.881963 136895 net.cpp:225] Memory required for data: 266087936
I1109 00:02:49.882143 136895 layer_factory.hpp:114] Creating layer fc8
I1109 00:02:49.882385 136895 net.cpp:160] Creating Layer fc8
I1109 00:02:49.882575 136895 net.cpp:596] fc8 <- fc7
I1109 00:02:49.882796 136895 net.cpp:570] fc8 -> fc8
I1109 00:02:50.306287 136895 net.cpp:210] Setting up fc8
I1109 00:02:50.306632 136895 net.cpp:217] Top shape: 32 1000 (32000)
I1109 00:02:50.307003 136895 net.cpp:225] Memory required for data: 266215936
I1109 00:02:50.307334 136895 layer_factory.hpp:114] Creating layer loss
I1109 00:02:50.331733 136895 net.cpp:160] Creating Layer loss
I1109 00:02:50.332051 136895 net.cpp:596] loss <- fc8
I1109 00:02:50.333113 136895 net.cpp:596] loss <- label
I1109 00:02:50.360318 136895 net.cpp:570] loss -> loss
I1109 00:02:50.398067 136895 layer_factory.hpp:114] Creating layer loss
I1109 00:02:53.033283 136895 net.cpp:210] Setting up loss
I1109 00:02:53.082173 136895 net.cpp:217] Top shape: (1)
I1109 00:02:53.098341 136895 net.cpp:220]     with loss weight 1
I1109 00:02:53.225569 136895 net.cpp:225] Memory required for data: 266215940
I1109 00:02:53.275832 136895 net.cpp:287] loss needs backward computation.
I1109 00:02:53.363631 136895 net.cpp:287] fc8 needs backward computation.
I1109 00:02:53.370910 136895 net.cpp:287] drop7 needs backward computation.
I1109 00:02:53.381989 136895 net.cpp:287] relu7 needs backward computation.
I1109 00:02:53.382302 136895 net.cpp:287] fc7 needs backward computation.
I1109 00:02:53.384673 136895 net.cpp:287] drop6 needs backward computation.
I1109 00:02:53.385074 136895 net.cpp:287] relu6 needs backward computation.
I1109 00:02:53.385401 136895 net.cpp:287] fc6 needs backward computation.
I1109 00:02:53.386122 136895 net.cpp:287] pool5 needs backward computation.
I1109 00:02:53.386870 136895 net.cpp:287] relu5 needs backward computation.
I1109 00:02:53.387126 136895 net.cpp:287] conv5 needs backward computation.
I1109 00:02:53.387320 136895 net.cpp:287] relu4 needs backward computation.
I1109 00:02:53.387534 136895 net.cpp:287] conv4 needs backward computation.
I1109 00:02:53.387732 136895 net.cpp:287] relu3 needs backward computation.
I1109 00:02:53.387980 136895 net.cpp:287] conv3 needs backward computation.
I1109 00:02:53.400593 136895 net.cpp:287] pool2 needs backward computation.
I1109 00:02:53.400969 136895 net.cpp:287] norm2 needs backward computation.
I1109 00:02:53.401280 136895 net.cpp:287] relu2 needs backward computation.
I1109 00:02:53.401515 136895 net.cpp:287] conv2 needs backward computation.
I1109 00:02:53.401705 136895 net.cpp:287] pool1 needs backward computation.
I1109 00:02:53.401892 136895 net.cpp:287] norm1 needs backward computation.
I1109 00:02:53.402077 136895 net.cpp:287] relu1 needs backward computation.
I1109 00:02:53.402258 136895 net.cpp:287] conv1 needs backward computation.
I1109 00:02:53.414908 136895 net.cpp:289] data does not need backward computation.
I1109 00:02:53.439216 136895 net.cpp:331] This network produces output loss
I1109 00:02:53.511035 136895 net.cpp:345] Network initialization done.
I1109 00:02:53.679455 136895 caffe.cpp:452] Performing Forward
I1109 00:03:06.537922 136895 caffe.cpp:457] Initial loss: 7.03598
I1109 00:03:06.602771 136895 caffe.cpp:459] Performing Backward
I1109 00:03:11.268951 136895 caffe.cpp:468] *** Benchmark begins ***
I1109 00:03:11.281040 136895 caffe.cpp:469] Testing for 1 iterations.
I1109 00:03:11.425668 136895 caffe.cpp:482] Profiling Layer: relu4 forward
I1109 00:03:13.534762 136895 caffe.cpp:512] Iteration: 1 forward-backward time: 2101 ms.
I1109 00:03:13.692646 136895 caffe.cpp:519] Average time per layer: 
I1109 00:03:13.710026 136895 caffe.cpp:522]       data	forward: 551.052 ms.
I1109 00:03:13.785702 136895 caffe.cpp:526]       data	backward: 4.731 ms.
I1109 00:03:13.810840 136895 caffe.cpp:522]      conv1	forward: 123.602 ms.
I1109 00:03:13.817708 136895 caffe.cpp:526]      conv1	backward: 47.149 ms.
I1109 00:03:13.825284 136895 caffe.cpp:522]      relu1	forward: 22.253 ms.
I1109 00:03:13.835780 136895 caffe.cpp:526]      relu1	backward: 14.457 ms.
I1109 00:03:13.839853 136895 caffe.cpp:522]      norm1	forward: 18.412 ms.
I1109 00:03:13.844305 136895 caffe.cpp:526]      norm1	backward: 17.297 ms.
I1109 00:03:13.853561 136895 caffe.cpp:522]      pool1	forward: 19.068 ms.
I1109 00:03:13.862855 136895 caffe.cpp:526]      pool1	backward: 80.666 ms.
I1109 00:03:13.872855 136895 caffe.cpp:522]      conv2	forward: 70.144 ms.
I1109 00:03:13.873255 136895 caffe.cpp:526]      conv2	backward: 74.168 ms.
I1109 00:03:13.881186 136895 caffe.cpp:522]      relu2	forward: 12.17 ms.
I1109 00:03:13.887127 136895 caffe.cpp:526]      relu2	backward: 16.197 ms.
I1109 00:03:13.892590 136895 caffe.cpp:522]      norm2	forward: 13.431 ms.
I1109 00:03:13.900419 136895 caffe.cpp:526]      norm2	backward: 16.116 ms.
I1109 00:03:13.903148 136895 caffe.cpp:522]      pool2	forward: 15.142 ms.
I1109 00:03:13.903375 136895 caffe.cpp:526]      pool2	backward: 55.97 ms.
I1109 00:03:13.903583 136895 caffe.cpp:522]      conv3	forward: 43.881 ms.
I1109 00:03:13.903789 136895 caffe.cpp:526]      conv3	backward: 83.816 ms.
I1109 00:03:13.903992 136895 caffe.cpp:522]      relu3	forward: 12.256 ms.
I1109 00:03:13.904196 136895 caffe.cpp:526]      relu3	backward: 30.047 ms.
I1109 00:03:13.904398 136895 caffe.cpp:522]      conv4	forward: 33.916 ms.
I1109 00:03:13.904602 136895 caffe.cpp:526]      conv4	backward: 27.949 ms.
I1109 00:03:13.904850 136895 caffe.cpp:522]      relu4	forward: 27.222 ms.
I1109 00:03:13.905107 136895 caffe.cpp:526]      relu4	backward: 7.45 ms.
I1109 00:03:13.905323 136895 caffe.cpp:522]      conv5	forward: 29.991 ms.
I1109 00:03:13.905531 136895 caffe.cpp:526]      conv5	backward: 18.682 ms.
I1109 00:03:13.905737 136895 caffe.cpp:522]      relu5	forward: 14.077 ms.
I1109 00:03:13.905941 136895 caffe.cpp:526]      relu5	backward: 0.231 ms.
I1109 00:03:13.906142 136895 caffe.cpp:522]      pool5	forward: 19.371 ms.
I1109 00:03:13.906347 136895 caffe.cpp:526]      pool5	backward: 9.2 ms.
I1109 00:03:13.907196 136895 caffe.cpp:522]        fc6	forward: 38.221 ms.
I1109 00:03:13.907436 136895 caffe.cpp:526]        fc6	backward: 46.508 ms.
I1109 00:03:13.907665 136895 caffe.cpp:522]      relu6	forward: 18.661 ms.
I1109 00:03:13.907910 136895 caffe.cpp:526]      relu6	backward: 0.087 ms.
I1109 00:03:13.910519 136895 caffe.cpp:522]      drop6	forward: 40.4 ms.
I1109 00:03:13.910907 136895 caffe.cpp:526]      drop6	backward: 0.088 ms.
I1109 00:03:13.911154 136895 caffe.cpp:522]        fc7	forward: 16.857 ms.
I1109 00:03:13.911352 136895 caffe.cpp:526]        fc7	backward: 22.076 ms.
I1109 00:03:13.911548 136895 caffe.cpp:522]      relu7	forward: 17.24 ms.
I1109 00:03:13.911741 136895 caffe.cpp:526]      relu7	backward: 0.094 ms.
I1109 00:03:13.911931 136895 caffe.cpp:522]      drop7	forward: 36.873 ms.
I1109 00:03:13.912123 136895 caffe.cpp:526]      drop7	backward: 0.141 ms.
I1109 00:03:13.912312 136895 caffe.cpp:522]        fc8	forward: 14.096 ms.
I1109 00:03:13.912504 136895 caffe.cpp:526]        fc8	backward: 94.17 ms.
I1109 00:03:13.912694 136895 caffe.cpp:522]       loss	forward: 56.397 ms.
I1109 00:03:13.912930 136895 caffe.cpp:526]       loss	backward: 79.216 ms.
I1109 00:03:13.918524 136895 caffe.cpp:532] Average Forward pass: 1319.6 ms.
I1109 00:03:13.931404 136895 caffe.cpp:535] Average Backward pass: 755.354 ms.
I1109 00:03:13.942144 136895 caffe.cpp:537] Average Forward-Backward: 2592 ms.
I1109 00:03:13.956671 136895 caffe.cpp:540] Total Time: 2592 ms.
I1109 00:03:13.968924 136895 caffe.cpp:541] *** Benchmark ends ***
Search stanza is "EMIT_GLOBAL_DYNAMIC_STATS"
elements_fp_single_1 = 1
elements_fp_single_4 = 0
elements_fp_single_8 = 0
elements_fp_single_16 = 129792
elements_fp_double_1 = 0
elements_fp_double_2 = 129792
elements_fp_double_4 = 0
elements_fp_double_8 = 0
--->Total single-precision FLOPs = 2076673
--->Total double-precision FLOPs = 259584
--->Total FLOPs = 2336257
mem-read-1 = 23116
mem-read-2 = 34
mem-read-4 = 185756
mem-read-8 = 258319
mem-read-16 = 0
mem-read-32 = 1
mem-read-64 = 259601
mem-write-1 = 50
mem-write-2 = 17
mem-write-4 = 560
mem-write-8 = 25203
mem-write-16 = 0
mem-write-32 = 1
mem-write-64 = 129793
--->Total Bytes read = 19447256
--->Total Bytes written = 8510732
--->Total Bytes = 27957988
